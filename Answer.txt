1) Многопоточность. Пуллы потоков. ExecutorService. Executors.
Многопоточность. Пуллы потоков. ExecutorService. Executors.
Пул потоков – это список исполняемых потоков. В него можно добавлять новые задачи, под задачами я подразумеваю объекты классов, имплементирующих интерфейс Callable. Причем размер пула определяет только количество потоков, которые способны работать одновременно, а задачи можно посылать в неограниченном количестве и как только освободится поток, задача отправится на выполнение.
ExecutorService — это интерфейс, который управляет выполнением многопоточных задач.
Для создания пулов потоков используются статические методы класса Executors.
newFixedThreadPool(int nThreads):
Создает пул с фиксированным количеством потоков nThreads. Потоки переиспользуются для выполнения задач.
submit(Callable/ Runnable task):
Выполняет задачу Runnable или Callable в пуле потоков и возвращает объект Future, который нужен для анализа результатов.
execute(Runnable task):
Выполняет задачу Runnable. В отличие от submit(), этот метод не возвращает результат.
shutdown():
Начинает завершение работы пула потоков. Новые задачи больше не принимаются, но уже запущенные завершатся.

2) 10.	Классы, интерфейсы и перечисления. Ключевые слова abstract, interface, enum, default.
Разница между абстрактным классом и интерфейсом. Вложенные классы.

Класс - это "правило" для создания объекта. В нем есть поля и методы, причем у них есть 4 модификатора доступа:
Public - доступно всем
Private - доступно только внутри класса
Protected - доступно внутри класса и классам наследникам
Есть особенные метод - конструктор, который вызывается после создания объекта и инициализирует его поля.
В Java конструктора может и не быть.
В Java нет множественного наследования. Мы может отнаследоваться только от одного абстрактного класса, но от
скольки угодно интерфейсов.

Абстрактный класс в Java - это класс, который содержит абстрактные методы.

Разница между интерфейсом и абстрактным классом
Класс может наследоваться только от одного абстрактого класса, но может реализовывать сколько угодно интерфейсов.
В абстрактном классе могут быть какие угодно поля, в интерфейсе - только public static final

Ключевое слово default позволят перализовать какие-то методы по умолчанию в абстрактном классе и тогда их можно не
переопределять в дочернем классе, будет вызван метод по умолчанию

Вложенные классы
Вложенные классы в Java — это классы, объявленные внутри другого класса.
Вложенные классы имеют доступ ко всем полям и методам своего внешнего класса, включая private.
Внутренний класс всегда держит ссылку на внешний класс
Через эту неявную ссылку внутренний класс и имеет доступ ко всем полям внешнего класса.



